<doxygen><compounddef id="expath.org_ns_http-client-schema" kind="schema"><detaileddescription><para><h3>Content of expath.org_ns_http-client schema</h3><programlisting type="schema">&lt;!--
 - Copyright 2006-2008 The FLWOR Foundation.
 -
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 -
 - http://www.apache.org/licenses/LICENSE-2.0
 -
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
--&gt;&lt;schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:http="http://expath.org/ns/http-client" targetNamespace="http://expath.org/ns/http-client" elementFormDefault="qualified"&gt;
  &lt;annotation xml:lang="en"&gt;
    &lt;documentation&gt;
      This schema defines the type used by the XQuery http module
      http://www.expath.org/mod/http-client.
    &lt;/documentation&gt;
  &lt;/annotation&gt;
  &lt;complexType name="requestType"&gt;
    &lt;annotation&gt;
      &lt;documentation xml:lang="en"&gt;
        This type defines a request. An element of this type can be used to make
        an http request with the XQuery module
        http://www.expath.org/mod/http-client.
      &lt;/documentation&gt;
    &lt;/annotation&gt;
    &lt;sequence&gt;
      &lt;element name="header" type="http:headerType" minOccurs="0" maxOccurs="unbounded"&gt;
        &lt;annotation xml:lang="en"&gt;
          &lt;documentation&gt;
            Several http headers can be defined inside a http request.
          &lt;/documentation&gt;
        &lt;/annotation&gt;
      &lt;/element&gt;
      &lt;choice&gt;
        &lt;annotation xml:lang="en"&gt;
          &lt;documentation&gt;
            The user has the choice to create either a multipart request or a
            normal request (postRequest).
          &lt;/documentation&gt;
        &lt;/annotation&gt;
        &lt;element name="multipart" type="http:multipartType" minOccurs="0" maxOccurs="1"&gt;
          &lt;annotation xml:lang="en"&gt;
            &lt;documentation&gt;
              Represents a multi-part body, either in a request or a response,
              as defined below.
            &lt;/documentation&gt;
          &lt;/annotation&gt;
        &lt;/element&gt;
        &lt;element name="body" type="http:bodyType" minOccurs="0" maxOccurs="1"&gt;
          &lt;annotation xml:lang="en"&gt;
            &lt;documentation&gt;
              Represents a multi-part body, either in a request or a response,
              as defined below. It can be overridden by the parameter $content
              (the way $content is used to build the body can be controlled by
              the parameter $serial, see section below for details.)
            &lt;/documentation&gt;
          &lt;/annotation&gt;
        &lt;/element&gt;
      &lt;/choice&gt;
    &lt;/sequence&gt;
    &lt;attribute name="method" type="NCName" use="required"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          Is the http verb to use, as GET, POST, etc. It is case insensitive.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="href" type="anyURI" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          Is the URI the request has to be sent to. It can be overridden by the
          parameter $href.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="status-only" type="boolean" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          Control how the response will look like; if true, only the
          status code and the headers are returned, the content is not (neither
          http:body, http:multipart, nor the interpreted additional value in
          the returned sequence, see hereafter.)
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="username" type="string" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          HTTP authentication when sending a request is controlled by the
          attributes username, password, auth-method and send-authorization
          on the element http:request. If username has a value, password and
          auth-method must have a value too. And if any one of the three other
          attributes have been set, username must be set too.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="password" type="string" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          HTTP authentication when sending a request is controlled by the
          attributes username, password, auth-method and send-authorization
          on the element http:request. If username has a value, password and
          auth-method must have a value too. And if any one of the three other
          attributes have been set, username must be set too.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="send-authorization" type="boolean" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          HTTP authentication when sending a request is controlled by the
          attributes username, password, auth-method and send-authorization
          on the element http:request. If username has a value, password and
          auth-method must have a value too. And if any one of the three other
          attributes have been set, username must be set too.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="auth-method" type="string" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          HTTP authentication when sending a request is controlled by the
          attributes username, password, auth-method and send-authorization
          on the element http:request. If username has a value, password and
          auth-method must have a value too. And if any one of the three other
          attributes have been set, username must be set too.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="override-media-type" type="string" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          Is a MIME type. It can be used only with http:request, and will
          override the Content-Type header returned by the server.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="follow-redirect" type="boolean" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          Control whether an http redirect is automatically followed or not. If
          it is false, the http redirect is returned as the response. If it is
          true (the default) the function tries to follow the redirect, by
          sending the same request to the new address (including body, headers,
          and authentication credentials.) Maximum one redirect is followed
          (there is no attempt to follow a redirect in response to following a
          first redirect.)
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="timeout" type="integer" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          Is the maximum number of seconds to wait for the server to respond. If
          this time duration is reached, an error is thrown.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
  &lt;/complexType&gt;

  &lt;element name="request" type="http:requestType"&gt;
    &lt;annotation xml:lang="en"&gt;
      &lt;documentation&gt;
        An element to be used to make an http request with the
        http://www.expath.org/mod/http-client module.
      &lt;/documentation&gt;
    &lt;/annotation&gt;
  &lt;/element&gt;

  &lt;complexType name="headerType"&gt;
    &lt;annotation xml:lang="en"&gt;
      &lt;documentation&gt;
        This type represents a key value pair of a header element.
      &lt;/documentation&gt;
    &lt;/annotation&gt;
    &lt;attribute name="name" type="string"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          The key of the key/value pair.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
    &lt;attribute name="value" type="string"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          The value of the key/value pair.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
  &lt;/complexType&gt;
  &lt;element name="header" type="http:headerType"/&gt;

  &lt;complexType name="bodyType" mixed="true"&gt;
    &lt;annotation xml:lang="en"&gt;
      &lt;documentation&gt;
        The http:body element represents the body of either an HTTP request or
        of an HTTP response (in multi-part requests and responses, it represents
        the body of a single one part.)
      &lt;/documentation&gt;
    &lt;/annotation&gt;
    &lt;sequence&gt;
      &lt;any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="skip"/&gt;
    &lt;/sequence&gt;
    &lt;attribute name="media-type" type="string" use="required"/&gt;
    &lt;attribute name="src" type="anyURI" use="optional"/&gt;
    &lt;attribute name="method" use="optional"&gt;
      &lt;simpleType&gt;
        &lt;union memberTypes="http:serialType http:qnameNotNCName"/&gt;
      &lt;/simpleType&gt;
    &lt;/attribute&gt;
    &lt;attribute name="byte-order-mark" use="optional"&gt;
      &lt;simpleType&gt;
        &lt;restriction base="string"&gt;
          &lt;enumeration value="yes"/&gt;
          &lt;enumeration value="no"/&gt;
        &lt;/restriction&gt;
      &lt;/simpleType&gt;
    &lt;/attribute&gt;
    &lt;attribute name="cdata-section-elements" use="optional"&gt;
      &lt;simpleType&gt;
        &lt;list itemType="QName"/&gt;
      &lt;/simpleType&gt;
    &lt;/attribute&gt;
    &lt;attribute name="doctype-public" use="optional" type="string"/&gt;
    &lt;attribute name="doctype-system" use="optional" type="string"/&gt;
    &lt;attribute name="encoding" type="string" use="optional"/&gt;
    &lt;attribute name="escape-uri-attributes" use="optional"&gt;
      &lt;simpleType&gt;
        &lt;restriction base="string"&gt;
          &lt;enumeration value="yes"/&gt;
          &lt;enumeration value="no"/&gt;
        &lt;/restriction&gt;
      &lt;/simpleType&gt;
    &lt;/attribute&gt;
    &lt;attribute name="indent" use="optional" type="http:yesNoType"&gt;
    &lt;/attribute&gt;
    &lt;attribute name="normalization-form" use="optional" type="NMTOKEN"/&gt;
    &lt;attribute name="omit-xml-declaration" use="optional" type="http:yesNoType"/&gt;
    &lt;attribute name="standalone" use="optional"&gt;
      &lt;simpleType&gt;
        &lt;restriction base="string"&gt;
          &lt;enumeration value="yes"/&gt;
          &lt;enumeration value="no"/&gt;
          &lt;enumeration value="omit"/&gt;
        &lt;/restriction&gt;
      &lt;/simpleType&gt;
    &lt;/attribute&gt;
    &lt;attribute name="suppress-indentation"&gt;
      &lt;simpleType&gt;
        &lt;list itemType="QName"/&gt;
      &lt;/simpleType&gt;
    &lt;/attribute&gt;
    &lt;attribute name="undeclare-prefixes" type="http:yesNoType" use="optional"/&gt;
    &lt;attribute name="version" type="NMTOKEN" use="optional"&gt;
      &lt;annotation xml:lang="en"&gt;
        &lt;documentation&gt;
          In the draft from 9 January 2010, this would be output-version. But since it is discussed to
          change this to version in a future release and to make the implementation easier in zorba, this is
          changed to version.
        &lt;/documentation&gt;
      &lt;/annotation&gt;
    &lt;/attribute&gt;
  &lt;/complexType&gt;
  &lt;element name="body" type="http:bodyType"/&gt;

  &lt;complexType name="multipartType"&gt;
    &lt;annotation xml:lang="en"&gt;
      &lt;documentation&gt;
        The http:multipart element represents an multi-part request or
        response. The media-type attribute is the media type of the
        request or response, and has to be a multipart media type (that is, its
        main type must be multipart.) The boundary attribute is the boundary
        marker used to separate the several parts in the message (the value of
        the attribute is prefixed with "--" to form the actual boundary marker
        in the request; on the other way, this prefix is removed from the
        boundary marker in the response to set the value of the attribute.)
      &lt;/documentation&gt;
    &lt;/annotation&gt;
    &lt;sequence&gt;
      &lt;sequence minOccurs="1" maxOccurs="unbounded"&gt;
        &lt;element name="header" type="http:headerType" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;element name="body" type="http:bodyType" minOccurs="1" maxOccurs="1"/&gt;
      &lt;/sequence&gt;
    &lt;/sequence&gt;
    &lt;attribute name="media-type" type="string" use="required"/&gt;
    &lt;attribute name="boundary" type="string" use="optional"/&gt;
  &lt;/complexType&gt;
  &lt;element name="multipart" type="http:multipartType"/&gt;

  &lt;complexType name="responseType"&gt;
    &lt;annotation xml:lang="en"&gt;
      &lt;documentation&gt;
        This is the first item returned by the function defined in this module.
        The status attribute is the http status code returned by the server, and
        message is the message coming with the status on the status line. The
        http:header elements are as defined for the request, but represent
        instead the response headers. The http:body and http:multipart elements
        are also like in the request, but http:body elements must be empty.
      &lt;/documentation&gt;
    &lt;/annotation&gt;
    &lt;sequence&gt;
      &lt;element name="header" type="http:headerType" minOccurs="0" maxOccurs="unbounded"&gt; &lt;/element&gt;
      &lt;choice&gt;
        &lt;element name="multipart" type="http:multipartType" minOccurs="0" maxOccurs="1"&gt; &lt;/element&gt;
        &lt;element name="body" type="http:bodyType" minOccurs="0" maxOccurs="1"/&gt;
      &lt;/choice&gt;
    &lt;/sequence&gt;
    &lt;attribute name="status" type="integer" use="required"/&gt;
    &lt;attribute name="message" type="string" use="required"/&gt;
  &lt;/complexType&gt;

  &lt;element name="response" type="http:responseType"/&gt;
  
  &lt;simpleType name="yesNoType"&gt;
    &lt;restriction base="string"&gt;
      &lt;enumeration value="yes"/&gt;
      &lt;enumeration value="no"/&gt;
    &lt;/restriction&gt;
  &lt;/simpleType&gt;
  
  &lt;simpleType name="serialType"&gt;
    &lt;restriction base="string"&gt;
      &lt;enumeration value="xml"/&gt;
      &lt;enumeration value="html"/&gt;
      &lt;enumeration value="xhtml"/&gt;
      &lt;enumeration value="text"/&gt;
      &lt;enumeration value="binary"/&gt;
    &lt;/restriction&gt;
  &lt;/simpleType&gt;
  
  &lt;simpleType name="qnameNotNCName"&gt;
    &lt;restriction base="QName"&gt;
      &lt;pattern value=".*:.*"/&gt;
    &lt;/restriction&gt;
  &lt;/simpleType&gt;
&lt;/schema&gt;</programlisting></para></detaileddescription></compounddef></doxygen>