<doxygen><compounddef id="www.zorba-xquery.com_schemas_pul-schema" kind="schema"><detaileddescription><para><h3>Content of www.zorba-xquery.com_schemas_pul schema</h3><programlisting type="schema">&lt;!--
  ************************************************************
  28msec schema for representing a Pending Update List as XML.
  ************************************************************
--&gt;&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:pul="http://www.zorba-xquery.com/schemas/pul" xmlns:xdm="http://www.zorba-xquery.com/schemas/xdm" xmlns:xqx="http://www.w3.org/2005/XQueryX" targetNamespace="http://www.zorba-xquery.com/schemas/pul" elementFormDefault="qualified"&gt;

  &lt;xs:import namespace="http://www.zorba-xquery.com/schemas/xdm" schemaLocation="xdm.schema"/&gt;
  &lt;xs:import namespace="http://www.w3.org/2005/XQueryX" schemaLocation="../../../../org/w3/www/2005/XQueryX.schema"/&gt;
  
    &lt;!--
    ****************
    The root element
    ****************
  --&gt;
  &lt;xs:element name="pending-update-list"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
        &lt;xs:element name="insertBefore" type="pul:insert-type"/&gt;
        &lt;xs:element name="insertAfter" type="pul:insert-type"/&gt;
        &lt;xs:element name="insertInto" type="pul:insert-type"/&gt;
        &lt;xs:element name="insertIntoAsFirst" type="pul:insert-type"/&gt;
        &lt;xs:element name="insertIntoAsLast" type="pul:insert-type"/&gt;
        &lt;xs:element name="insertAttributes" type="pul:insertAttributes-type"/&gt;
        &lt;xs:element name="delete" type="pul:delete-type"/&gt;
        &lt;xs:element name="replaceNode" type="pul:replaceNode-type"/&gt;
        &lt;xs:element name="replaceValue" type="pul:replaceValue-type"/&gt;
        &lt;xs:element name="replaceElementContent" type="pul:replaceElementContent-type"/&gt;
        &lt;xs:element name="rename" type="pul:rename-type"/&gt;
        &lt;xs:element name="put" type="pul:put-type"/&gt;
        &lt;xs:element name="createCollection" type="pul:createCollection-type"/&gt;
        &lt;xs:element name="insertAfterIntoCollection" type="pul:insertNodesRelative-type"/&gt;
        &lt;xs:element name="insertBeforeIntoCollection" type="pul:insertNodesRelative-type"/&gt;
        &lt;xs:element name="insertAsFirstIntoCollection" type="pul:insertNodesAbsolute-type"/&gt;
        &lt;xs:element name="insertAsLastIntoCollection" type="pul:insertNodesAbsolute-type"/&gt;
        &lt;xs:element name="insertIntoCollection" type="pul:insertNodes-type"/&gt;
        &lt;xs:element name="deleteNodesFromCollection" type="pul:deleteNodes-type"/&gt;
        &lt;xs:element name="deleteCollection" type="pul:deleteCollection-type"/&gt;
        &lt;xs:element name="createDocument" type="pul:createDocument-type"/&gt;
        &lt;xs:element name="deleteDocument" type="pul:deleteDocument-type"/&gt;
        &lt;xs:element name="activateIntegrityConstraint" type="pul:activateIntegrityConstraint-type"/&gt;
        &lt;xs:element name="deActivateIntegrityConstraint" type="pul:deActivateIntegrityConstraint-type"/&gt;
        &lt;xs:element name="createIndex" type="pul:createIndex-type"/&gt;
        &lt;xs:element name="deleteIndex" type="pul:deleteIndex-type"/&gt;
        &lt;xs:element name="refreshIndex" type="pul:refreshIndex-type"/&gt;
      &lt;/xs:choice&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;

  &lt;!--
    *****************************************************
    Definition of a PUL and the 11 XQUF update primitives
    *****************************************************
  --&gt;
  &lt;xs:complexType name="insert-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="content" type="xdm:children-sequence-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="insertAttributes-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="content" type="xdm:attributes-sequence-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="delete-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
    &lt;!-- Must check upon delivery that:
      o if target is an attribute node, all nodes in content are attributes.
      o if target is a text/PI/comment/element node, all nodes in content are text/PI/comment/element nodes.
      The definition of pul:children-or-attributes-only-type already makes sure that one of these two cases is met.
      But one still needs to make sure that it is the right one of the two depending on the target.
    --&gt;
  &lt;xs:complexType name="replaceNode-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="replacement" type="xdm:children-or-attributes-sequence-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="replaceValue-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="string-value" type="xs:string"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="replaceElementContent-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="text" type="xdm:zero-or-one-text-node-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="rename-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="newName" type="xs:QName"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="put-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="node" type="xdm:one-document-or-element-node-type"/&gt;
      &lt;xs:element name="uri" type="xs:anyURI"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;


&lt;!--
  ******************************************************
  Definition of proprietary collection update primitives
  ******************************************************
--&gt;
  &lt;xs:complexType name="createCollection-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="name" type="xs:QName"/&gt;
      &lt;xs:element name="type" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="xqx:sequenceType"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="annotation" type="xqx:annotation" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:element name="nodes" type="xdm:nodes-sequence-no-namespaces-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="insertNodesRelative-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="collection" type="xs:QName"/&gt;
      &lt;xs:element name="target" type="xs:anyURI"/&gt;
      &lt;xs:element name="nodes" type="xdm:nodes-sequence-no-namespaces-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="insertNodesAbsolute-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="collection" type="xs:QName"/&gt;
      &lt;xs:element name="nodes" type="xdm:nodes-sequence-no-namespaces-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="insertNodes-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="collection" type="xs:QName"/&gt;
      &lt;xs:element name="nodes" type="xdm:nodes-sequence-no-namespaces-type"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="deleteNodes-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="collection" type="xs:QName"/&gt;
      &lt;xs:element name="target" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="deleteCollection-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="collection" type="xs:QName"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;!--
  ******************************************************
  Definition of proprietary document primitives
  ******************************************************
--&gt;
  &lt;xs:complexType name="createDocument-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="uri" type="xs:anyURI"/&gt;
      &lt;xs:element name="node-reference" type="xs:anyURI"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="deleteDocument-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="uri" type="xs:anyURI"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;!--
  ****************************************************************
  Definition of proprietary integrity constraint update primitives
  ****************************************************************
--&gt;
  &lt;xs:complexType name="activateIntegrityConstraint-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="identity-constraint-name" type="xs:QName"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="deActivateIntegrityConstraint-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="identity-constraint-name" type="xs:QName"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
    
&lt;!--
  *************************************************
  Definition of proprietary index update primitives
  *************************************************
--&gt;
  &lt;xs:complexType name="createIndex-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="index-name" type="xs:QName"/&gt;
      &lt;xs:element name="domain-expression"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="xqx:expr"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="key-expressions"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="xqx:expr" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="annotation" type="xqx:annotation" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="deleteIndex-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="index-name" type="xs:QName"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="refreshIndex-type"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="index-name" type="xs:QName"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</programlisting></para></detaileddescription></compounddef></doxygen>