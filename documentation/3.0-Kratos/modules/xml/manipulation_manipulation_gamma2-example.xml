<doxygen><compounddef id="manipulation_gamma2.xq-example" kind="example"><detaileddescription><para><h3>Content of manipulation_gamma2.xq example</h3><programlisting type="example">(:~
 : This example uses the file module read an image from disk, 
 : and gamma corrects the red and blue color channels of the image using the gamma function from the image/manipulation module.
 : As it is, the example just asserts that the resulting xs:base64Binary is not empty, 
 : in a real application one could further process the image, or write it 
 : to disk using file:write(a_path, $gamma-corrected-image, &amp;lt;method&amp;gt;binary&amp;lt;/method&amp;gt;), send it in an email etc.
 :)
import module namespace file = 'http://expath.org/ns/file';
import module namespace manipulation = 'http://zorba.io/modules/image/manipulation';

declare variable $local:image-dir := fn:concat(file:dir-name(fn:static-base-uri()), "/images/");


let $bird as xs:base64Binary := file:read-binary(concat($local:image-dir, "/bird.jpg"))
let $gamma-corrected-image := manipulation:gamma($bird, 2, 2, 0)
return not(empty($gamma-corrected-image))

</programlisting></para></detaileddescription></compounddef></doxygen>