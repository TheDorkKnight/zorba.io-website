<doxygen><compounddef id="expunge_example.xq-example" kind="example"><detaileddescription><para><h3>Content of expunge_example.xq example</h3><programlisting type="example">(:
 : This example shows how to use the expunge function of the http://www.zorba-xquery.com/modules/email/imap module.
 : Using the host information stored in the variable $hostInfo first the search function is used to get
 : the unique id of the all messages with the word delete in its subject.
 : Then the delete flag is set on these messages using the set-flags method of the imap-module.
 : The call to expunge on the mailbox then deletes all messages that have the delete flag set.
 : 
 : This example is concluded by using the send function to send a new mail to the inbox to make sure that
 : there will be a message to delete next time the example is used.
 :) 

import module namespace imap = 'http://www.zorba-xquery.com/modules/email/imap';
import module namespace smtp = 'http://www.zorba-xquery.com/modules/email/smtp';


(: This variable contains the information of the account on the IMAP server. :) 
let $hostInfo :=
  &amp;lt;hostInfo xmlns="http://www.zorba-xquery.com/modules/email"&amp;gt;
    &amp;lt;hostName&amp;gt;mail.28msec.com/novalidate-cert&amp;lt;/hostName&amp;gt;
    &amp;lt;userName&amp;gt;imaptest&amp;lt;/userName&amp;gt;
    &amp;lt;password&amp;gt;cclient&amp;lt;/password&amp;gt;
  &amp;lt;/hostInfo&amp;gt;

(: This variable contains the information of the account from which the email should be sent. :) 
let $senderHostInfo :=
  &amp;lt;hostInfo xmlns="http://www.zorba-xquery.com/modules/email"&amp;gt;
    &amp;lt;hostName&amp;gt;smtp.gmail.com:587/tls/novalidate-cert&amp;lt;/hostName&amp;gt;
    &amp;lt;userName&amp;gt;zorba.smtp.sender&amp;lt;/userName&amp;gt;
    &amp;lt;password&amp;gt;1openssl!&amp;lt;/password&amp;gt;
  &amp;lt;/hostInfo&amp;gt;

(: the XML representation of the email to be sent, as described by the XML schema
   http://www.zorba-xquery.com/modules/email :)
let $email := 
  &amp;lt;message xmlns="http://www.zorba-xquery.com/modules/email"&amp;gt;
    &amp;lt;envelope&amp;gt;
      &amp;lt;date&amp;gt;2010-11-26T15:50:39-04:01&amp;lt;/date&amp;gt;
      &amp;lt;subject&amp;gt;delete&amp;lt;/subject&amp;gt;
      &amp;lt;recipient&amp;gt;
        &amp;lt;to&amp;gt;
          &amp;lt;name&amp;gt;Test Account&amp;lt;/name&amp;gt;
          &amp;lt;email&amp;gt;imaptest@28msec.com&amp;lt;/email&amp;gt;
        &amp;lt;/to&amp;gt;
      &amp;lt;/recipient&amp;gt;
     &amp;lt;/envelope&amp;gt;
    &amp;lt;body&amp;gt;
      &amp;lt;content contentType="text/plain" charset="UTF-8" contentTransferEncoding="ENC8BIT"&amp;gt;
        Oh yeah
      &amp;lt;/content&amp;gt;
    &amp;lt;/body&amp;gt;
  &amp;lt;/message&amp;gt;

let $flags :=
  &amp;lt;flags xmlns="http://www.zorba-xquery.com/modules/email"&amp;gt;
    &amp;lt;deleted/&amp;gt;
  &amp;lt;/flags&amp;gt;

let $ids := imap:search($hostInfo, "INBOX", "SUBJECT delete", true())
return {
  for $id in $ids
  return
    imap:set-flags($hostInfo, "INBOX", $id, $flags, true());

  (: expunge from server :)
  imap:expunge($hostInfo, "INBOX");

  (: resend a "delete" message to have it next time when we execute this example :)
  smtp:send($senderHostInfo, $email);
}
</programlisting></para></detaileddescription></compounddef></doxygen>